<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<title></title>
		<!--导入jquery库-->
		<script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"></script>
		<style>
			/*给body元素添加背景图片*/
			
                body{
				background-image:url(img/grass.jpg);
			}
			/*设置mole图片出现的位置*/
			img{ 
				/*开启位置移动:绝对移动*/
				position: absolute;
				left:55px;
				top:30px;
				
			}
			/*给主游戏界面设置样式*/
			.stage{
				/*水平居中*/
				margin: auto;
				/*整体下移150px*/
				margin-top: 150px;
				height: 800px;
				width: 1200px;
				/*容器内的内容的对齐方式:水平居中*/
				text-align: center;
				/*鼠标在该区域内的样式*/
				cursor: url('img/h3.ico') 50 50,pointer;
				/*背景图片:继承自body*/
				background-image:inherit;
			
				
			}
			/*当鼠标在主界面区域点击时*/
			.stage:active{
				/*鼠标样式发生改变*/
				cursor: url('img/h4.ico') 50 50,pointer
			}
			
			/*给行容器指定样式*/
			.row{
				height: 200px;
				width:800px;
				margin: auto;
				margin-top: 35px;
				/*背景继承于.stage*/
				background-image:inherit
				
			}
			/*给每个鼠洞容器添加样式*/
			.hole{
				/*将显示洞口的div转换成行块级元素,这样转换后的div即可以指定宽高又可以水平排列*/
				display: inline-block;
				height: 180px;
				width:250px;
				
				/*每行的三个div均匀散开*/
				margin-left: 10px;
				/*设置背景填充时不重复*/
				background-repeat:no-repeat;
				/*设置背景*/
				background-image: url('img/hole.png');
				/*设置背景的位置*/
				background-position: bottom;
				/*设置洞口容器可移动*/
				position:relative;
				/*设置溢出的内容隐藏*/
				overflow: hidden;
			}
			
			/*设置加分字体的样式*/
			.msg{
				/*文字颜色*/
				color:white;
				/*字体大小*/
				font-size: 64px;
				/*字体*/
				font-family: "franklin gothic book";
			
			}
			
		</style>
	</head>
	<body>
		<!--界面布局的快速拓展公式： .stage>(row>hole[id=d$]*3)*3-->
		<div class="stage">
			<div class="row">
				<div class="hole" id='d1'></div>
				<div class="hole" id='d2'></div>
				<div class="hole" id='d3'></div>
			</div>
			
			<div class="row">
				<div class="hole" id='d4'></div>
				<div class="hole" id='d5'></div>
				<div class="hole" id='d6'></div>
			</div>
			
			<div class="row">
				<div class="hole" id='d7' ></div>
				<div class="hole" id='d8'></div>
				<div class="hole" id='d9'></div>
			</div>
			<script>
				//定义生成mole的函数
				function moleGenerator(){
				//生成一个1到9的随机数用来拼接选择器
					var rd = (Math.floor(Math.random()*9)+1)
					//拼接选择器，选中对应的id为 d+随机数所对应的元素，如随机数rd的值为3，则 rn = $('#d'+3) ==> $('#d3')
					var rn = $('#d'+ rd)
					//给选中的展示洞口div的元素添加一个我们自定义的属性 hasMole,表示当前这个洞口里有小鼠
					rn.prop('hasMole',true)
					//生成一个游离的图片节点对象并通过appendTo()方法将它添加到当前选中的展示洞口的div元素里  ==> <div><img></div>
					var img = $('<img src="img/swl.png" alt="SWL" width="164" height="128">').appendTo(rn)		
					//为了让小鼠在生成的一段时间后能小时，我们调用js的内置函数 setTimeout
					//该函数的作用时延时执行某些功能
					//第一个参数是一个匿名函数用来定义要延迟执行的事件逻辑，第二个参数是指定要延迟多久，单位是千分秒ms
					var intervalId = setTimeout(function(){
						//为了让小鼠图片消失，我们可以粗暴地清空洞口div里的所有内容
						//这样操作可以将嵌在其中的img元素删除，小鼠也就消失了
						rn.empty()
						//我们还要移除我们绑定在洞口上的自定以属性hasMole,以表明这个洞口不再有小鼠占据
						rn.removeProp('hasMole')
					},1000)
					
				}		
				
				//设置定时函数，每隔1000毫秒（1秒）执行一次上面定义的小鼠生成函数
				var timeId = setInterval('moleGenerator()',1000)
				
				//以jQuery的方式给所有的洞口div绑定点击事件的监听
				$('.hole').on('click',function(){
				//如果鼠标在洞口上方点击并且当前的洞口有hasMole属性
					if($(this).prop("hasMole")){
						//将当前洞口div中的img清除，表示小鼠被敲走
						$(this).empty()
						//创建一个游离的文字节点然后添加到当前的洞口div元素中，并以fadeOut的形式淡出
						$('<span class = "msg">+100<span>').appendTo($(this)).fadeOut()
					}
				})
			</script>
		</div>
	</body>
</html>
